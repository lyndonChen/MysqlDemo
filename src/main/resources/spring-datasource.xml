<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:*.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!--
			使用mysql驱动提供读写分离驱动实现，需要根据事务特性判断读写操作。问题：如果有一个数据库宕机，不会立即切换连接

		<property name="driverClassName">
			<value>com.mysql.jdbc.ReplicationDriver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql:replication://192.168.193.132,192.168.193.137,192.168.193.138/hi_db?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull</value>
		</property>-->
		<!--服务器 端实现读写分离 atlas 框架-->
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://192.168.193.134:1234/hi_db?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull</value>
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value>123456</value>
		</property>
		<property name="maxActive">
			<value>30</value>
		</property>
		<property name="maxIdle">
			<value>10</value>
		</property>
		<property name="maxWait">
			<value>10000</value>
		</property>
		<property name="validationQuery">
			<value>SELECT 1</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
			<value>3600000</value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>18000000</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
	</bean>
	<!-- transaction configuration-->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 定义事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 定义方法的过滤规则 -->
		<tx:attributes>
			<!-- 所有方法都使用事务 -->
			<tx:method name="*" propagation="REQUIRED"/>
			<!-- 定义所有get开头的方法都是只读的 -->
			<tx:method name="list*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<!--&lt;!&ndash; 定义AOP配置 &ndash;&gt;
	<aop:config>
		&lt;!&ndash; 定义一个切入点 &ndash;&gt;
		<aop:pointcut expression="execution (* com.camelot.demo.service..*(..))" id="services"/>
		&lt;!&ndash; 对切入点和事务的通知，进行适配 &ndash;&gt;
		<aop:advisor advice-ref="txAdvice" pointcut-ref="services"/>
	</aop:config>-->
</beans>